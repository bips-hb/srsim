// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// validReport
bool validReport(Rcpp::LogicalMatrix report, int n_drugs, int n_events);
RcppExport SEXP _SRSim_validReport(SEXP reportSEXP, SEXP n_drugsSEXP, SEXP n_eventsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::LogicalMatrix >::type report(reportSEXP);
    Rcpp::traits::input_parameter< int >::type n_drugs(n_drugsSEXP);
    Rcpp::traits::input_parameter< int >::type n_events(n_eventsSEXP);
    rcpp_result_gen = Rcpp::wrap(validReport(report, n_drugs, n_events));
    return rcpp_result_gen;
END_RCPP
}
// simulateReport
Rcpp::IntegerVector simulateReport(int n_drugs, int n_events, Rcpp::IntegerVector n_parents, Rcpp::NumericVector beta0, Rcpp::NumericVector beta1, Rcpp::IntegerVector parent_id);
RcppExport SEXP _SRSim_simulateReport(SEXP n_drugsSEXP, SEXP n_eventsSEXP, SEXP n_parentsSEXP, SEXP beta0SEXP, SEXP beta1SEXP, SEXP parent_idSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_drugs(n_drugsSEXP);
    Rcpp::traits::input_parameter< int >::type n_events(n_eventsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type n_parents(n_parentsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type beta0(beta0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type beta1(beta1SEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type parent_id(parent_idSEXP);
    rcpp_result_gen = Rcpp::wrap(simulateReport(n_drugs, n_events, n_parents, beta0, beta1, parent_id));
    return rcpp_result_gen;
END_RCPP
}
// create2x2TablesDAGRcpp
Rcpp::DataFrame create2x2TablesDAGRcpp(Rcpp::IntegerMatrix reports, Rcpp::NumericVector prob_drugs, Rcpp::NumericVector prob_events, Rcpp::IntegerVector n_parents, Rcpp::IntegerVector parent_id, Rcpp::NumericVector beta1);
RcppExport SEXP _SRSim_create2x2TablesDAGRcpp(SEXP reportsSEXP, SEXP prob_drugsSEXP, SEXP prob_eventsSEXP, SEXP n_parentsSEXP, SEXP parent_idSEXP, SEXP beta1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type reports(reportsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type prob_drugs(prob_drugsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type prob_events(prob_eventsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type n_parents(n_parentsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type parent_id(parent_idSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type beta1(beta1SEXP);
    rcpp_result_gen = Rcpp::wrap(create2x2TablesDAGRcpp(reports, prob_drugs, prob_events, n_parents, parent_id, beta1));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SRSim_validReport", (DL_FUNC) &_SRSim_validReport, 3},
    {"_SRSim_simulateReport", (DL_FUNC) &_SRSim_simulateReport, 6},
    {"_SRSim_create2x2TablesDAGRcpp", (DL_FUNC) &_SRSim_create2x2TablesDAGRcpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_SRSim(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
